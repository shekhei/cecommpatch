[Vertex shader]
#version 150

varying vec4 outPosition;

void main()
{
	gl_Position = gl_ModelViewProjectionMatrix * gl_Vertex;
	outPosition = gl_Position;
	gl_TexCoord[0] = gl_MultiTexCoord0;
}

[Fragment shader]
#version 150

#extension GL_ARB_draw_buffers : enable
#define saturate(x) clamp(x,0.0,1.0)

uniform sampler2D diffuseTex;
uniform sampler2D normalsDepthTex;
uniform vec3 lightPos;
uniform vec3 lightColor;

void main()
{	
	vec4 diffuse = texture(diffuseTex, gl_TexCoord[0].xy);
	vec4 normalsDepth = texture(normalsDepthTex, gl_TexCoord[0].xy); 
		
	// unpack normals
	
	vec3 normals = normalsDepth.xyz * 2.0 - 1.0;
	vec3 outDiffuse = saturate(dot(normals, -lightPos)) * lightColor * diffuse.xyz;
	
	gl_FragData[0] = vec4(normals.x, normals.y, normals.z, 1.0);
	gl_FragData[0] = vec4(normals.x, normals.y, normals.z, 1.0);
}
